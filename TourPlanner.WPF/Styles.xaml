<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="GrayBlueBackground">
        <SolidColorBrush.Color>#F8F9FD</SolidColorBrush.Color>
    </SolidColorBrush>

    <SolidColorBrush x:Key="BorderColor">
        <SolidColorBrush.Color>#F1F1F1</SolidColorBrush.Color>
    </SolidColorBrush>

    <SolidColorBrush x:Key="PrimaryColor">
        <SolidColorBrush.Color>#93A889</SolidColorBrush.Color>
    </SolidColorBrush>

    <SolidColorBrush x:Key="PrimaryColorHover">
        <SolidColorBrush.Color>#859A7B</SolidColorBrush.Color>
    </SolidColorBrush>

    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

    <ControlTemplate x:Key="ValidationTemplate">
        <Grid IsHitTestVisible="False">
            <Ellipse
                Width="19"
                Height="19"
                Fill="Red"
                HorizontalAlignment="Right"
                Margin="0 0 8 0"/>
            
            <TextBlock 
                Foreground="White"
                HorizontalAlignment="Right" 
                Margin="0 9 16 0"
                FontWeight="Bold"
                FontSize="12">!</TextBlock>
            
            <AdornedElementPlaceholder/>
        </Grid>
    </ControlTemplate>

    <Style 
        x:Key="ValidatedTextbox"
        TargetType="{x:Type TextBox}">

        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationTemplate}" />

        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="5" />
            </Style>
        </Style.Resources>

        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="BorderBrush" Value="Red" />
                <Setter Property="ToolTip" 
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style 
        x:Key="WindowControlButton" 
        TargetType="Button">
        
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
					    x:Name="border"
					    Background="Transparent"
					    BorderThickness="0"
					    SnapsToDevicePixels="true">

                        <ContentPresenter
                            x:Name="contentPresenter"
						    Margin="0"
						    HorizontalAlignment="Center"
						    VerticalAlignment="Center"
						    Focusable="False"
						    RecognizesAccessKey="True" 
                            Cursor="Hand" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle 
                        Margin="2" 
                        StrokeDashArray="1 2" 
                        SnapsToDevicePixels="true" 
                        StrokeThickness="1" 
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundedBorder">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="5" />
            </Style>
        </Style.Resources>
    </Style>

    <Style 
        x:Key="ModernButton" 
        TargetType="{x:Type Button}">

        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="7" />
            </Style>
            <Style TargetType="{x:Type ToolTip}">
                <Setter Property="Background" Value="{DynamicResource GrayBlueBackground}"></Setter>
            </Style>
        </Style.Resources>

        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        x:Name="border" 
                        Background="{TemplateBinding Background}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        SnapsToDevicePixels="true">
                        
                        <ContentPresenter 
                            x:Name="contentPresenter" 
                            Focusable="False" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" 
                            RecognizesAccessKey="True" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter 
                                Property="BorderBrush" 
                                TargetName="border" 
                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                        
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter 
                                Property="Background" 
                                TargetName="border" 
                                Value="{StaticResource Button.Disabled.Background}"/>
                            
                            <Setter
                                Property="BorderBrush" 
                                TargetName="border"
                                Value="{StaticResource Button.Disabled.Border}"/>
                            
                            <Setter 
                                Property="TextElement.Foreground" 
                                TargetName="contentPresenter" 
                                Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style 
        x:Key="CommandButton" 
        TargetType="{x:Type Button}" 
        BasedOn="{StaticResource ModernButton}">

        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        x:Name="border" 
                        Background="{TemplateBinding Background}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        SnapsToDevicePixels="true">
                        
                        <ContentPresenter 
                            x:Name="contentPresenter" 
                            Focusable="False" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter 
                                Property="BorderBrush" 
                                TargetName="border" 
                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Setter Property="Background" Value="{DynamicResource PrimaryColorHover}"></Setter>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter 
                                Property="Background" 
                                TargetName="border" 
                                Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter 
                                Property="BorderBrush" 
                                TargetName="border" 
                                Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter 
                                Property="TextElement.Foreground" 
                                TargetName="contentPresenter" 
                                Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style 
        x:Key="CommandButtonRoundedRight" 
        TargetType="{x:Type Button}" 
        BasedOn="{StaticResource CommandButton}">

        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="5" />
            </Style>
            <Style TargetType="{x:Type ToolTip}">
                <Setter Property="Background" Value="{DynamicResource GrayBlueBackground}"></Setter>
            </Style>
        </Style.Resources>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="_brdMain" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5">
                        
                        <Grid>
                            <Rectangle 
                                Fill="{TemplateBinding Background}"  
                                Height="25" 
                                VerticalAlignment="Top"
                                RadiusX="{Binding CornerRadius.TopLeft, RelativeSource={RelativeSource AncestorType={x:Type Border}}}" 
                                RadiusY="{Binding RadiusX, RelativeSource={RelativeSource Self}}" />
                            
                            <Rectangle 
                                Fill="{TemplateBinding Background}" 
                                Width="5" 
                                HorizontalAlignment="Left" />

                            <ContentPresenter 
                                x:Name="contentPresenter" 
                                Focusable="False" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                Margin="{TemplateBinding Padding}" 
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Setter Property="Background" Value="{DynamicResource PrimaryColorHover}"></Setter>
                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColorHover}"></Setter>
                        </Trigger>
                        
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter 
                                Property="TextElement.Foreground" 
                                TargetName="contentPresenter" 
                                Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <Style 
        x:Key="HoverButton" 
        TargetType="{x:Type Button}" 
        BasedOn="{StaticResource ModernButton}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        x:Name="border" 
                        Background="{TemplateBinding Background}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        SnapsToDevicePixels="true">
                        
                        <ContentPresenter 
                            x:Name="contentPresenter" 
                            Focusable="False" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" 
                            RecognizesAccessKey="True" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        
                    </Border>
                    <ControlTemplate.Triggers>
                        
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter 
                                Property="BorderBrush" 
                                TargetName="border" 
                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Setter Property="Background" Value="{DynamicResource GrayBlueBackground}"></Setter>
                        </Trigger>
                        
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter 
                                Property="Background" 
                                TargetName="border" 
                                Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter 
                                Property="BorderBrush" 
                                TargetName="border" 
                                Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter
                                Property="TextElement.Foreground" 
                                TargetName="contentPresenter" 
                                Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style 
        x:Key="TourMenu" 
        TargetType="{x:Type ContextMenu}">
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border 
                        CornerRadius="5" 
                        BorderBrush="{DynamicResource GrayBlueBackground}"
                        BorderThickness="1"
                        Background="White">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Button 
                                Style="{DynamicResource HoverButton}"  
                                Grid.Row="0"
                                Content="Report erstellen"
                                Padding="10"
                                FontSize="15" 
                                Command="{Binding CreateReportCommand}" />
                            
                            <Button 
                                Style="{DynamicResource HoverButton}" 
                                Grid.Row="1"
                                Content="Bearbeiten"
                                Padding="10"
                                FontSize="15"
                                Command="{Binding UpdateCurrentTourCommand}" />

                            <Button 
                                Style="{DynamicResource HoverButton}"  
                                Grid.Row="2"
                                Content="Löschen"
                                Padding="10"
                                FontSize="15" 
                                Command="{Binding DeleteCurrentTourCommand}" />
                        </Grid>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style 
        x:Key="TourListMenu" 
        TargetType="{x:Type ContextMenu}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border 
                        CornerRadius="5" 
                        BorderBrush="{DynamicResource GrayBlueBackground}"
                        BorderThickness="2"
                        Background="White">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Button 
                                Grid.Row="0"
                                Style="{DynamicResource HoverButton}"  
                                Content="Touren importieren"
                                Padding="10"
                                FontSize="15" 
                                Command="{Binding ImportToursCommand}" />

                            <Button 
                                Style="{DynamicResource HoverButton}" 
                                Grid.Row="1"
                                Content="Touren exportieren"
                                Padding="10"
                                FontSize="15"
                                Command="{Binding ExportToursCommand}" />

                            <Button 
                                Style="{DynamicResource HoverButton}"  
                                Grid.Row="2"
                                Content="Summary Report erstellen"
                                Padding="10"
                                FontSize="15" 
                                Command="{Binding CreateSummaryReportCommand}" />
                        </Grid>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TourLogMenu" TargetType="{x:Type ContextMenu}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border 
                        CornerRadius="7" 
                        Background="White">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Button 
                                Style="{DynamicResource HoverButton}" 
                                Grid.Row="0"
                                Content="Bearbeiten"
                                Padding="10"
                                FontSize="15"
                                Command="{Binding ElementName=Root, Path=DataContext.EditTourLogCommand}"
                                CommandParameter="{Binding}" />

                            <Button 
                                Style="{DynamicResource HoverButton}"  
                                Grid.Row="1"
                                Content="Löschen"
                                Padding="10"
                                FontSize="15" 
                                Command="{Binding DeleteTourLogCommand}"
                                CommandParameter="{Binding}" />
                        </Grid>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>